// Breakpoints
@mixin breakpoint($point) {
  @if $point == xs {
    @media (min-width: 480px) {
      @content;
    }
  } @else if $point == sm {
    @media (min-width: 768px) {
      @content;
    }
  } @else if $point == md {
    @media (min-width: 1024px) {
      @content;
    }
  } @else if $point == lg {
    @media (min-width: 1366px) {
      @content;
    }
  } @else if $point == xl {
    @media (min-width: 1500px) {
      @content;
    }
  }
}

// Grid
@mixin basic-styles {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin display-grid {
  display: -ms-grid;
  display: grid;
}

// Links
// Use @include links($link, $visited, $hover, $focus, $active);
// For example @include links($color_link, $color_link, $color_second, $color_second, $color_second_900);
@mixin links($link, $visited, $hover, $focus, $active, $text-decoration) {
  & {
    color: $link;
    text-decoration: $text-decoration;
    &:visited {
      color: $visited;
    }
    &:hover {
      color: $hover;
      text-decoration: underline;
    }
    &:focus {
      color: $focus;
    }
    &:active {
      color: $active;
    }
  }
}

// Radius
@mixin border-radius($radius: $size_md / 4) {
  border-radius: $radius;
}

// Size
// If height is not defined, it will reuse width
// @include size(200px);
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

// Alignment via https://css-tricks.com/snippets/sass/centering-mixin/
@mixin center($pos: both) {
  position: absolute;
  @if ($pos==both) {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if ($pos==top) {
    left: 50%;
    transform: translate(-50%, 0);
  } @else if ($pos==left) {
    top: 50%;
    transform: translate(0, -50%);
  } @else if ($pos==right) {
    top: 50%;
    right: 0;
    transform: translate(0, -50%);
  } @else if ($pos==bottom) {
    bottom: 0;
    left: 50%;
    transform: translate(-50%, 0);
  }
}

// Lists via https://www.brandongparker.com/category/code/csssassscssless/
@mixin list-reset {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

// Transitions and animations
// https://responsivedesign.is/articles/helpful-sass-mixins/
/* @include transition(all,2s,ease-out); */
@mixin transition($what: all, $time: 0.2s, $how: ease-in-out) {
  transition: $what $time $how;
}

// Animation
// Example use: @include animation(10s, 5s, ease-in-out, infinite, bounce)
@mixin animation($delay, $duration, $function, $iteration) {
  animation-delay: $delay;
  animation-duration: $duration;
  animation-fill-mode: both;
  animation-timing-function: $function;
  animation-iteration-count: $iteration;
}
@mixin animation-name($animation) {
  animation-name: $animation;
}

// Clearfix
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}
